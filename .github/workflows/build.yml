name: Build/release
on: push
jobs:
  release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Set bash on windows
        if: matrix.os == 'windows-latest'
        run: echo "Setting bash as default shell"
        shell: bash

      - name: List npm cache contents before caching
        if: matrix.os == 'windows-latest'
        run: ls -al ~/.npm
        shell: bash

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: List npm cache contents after caching
        if: matrix.os == 'windows-latest'
        run: ls -al ~/.npm
        shell: bash

      - name: Retry failed step
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 5
          max_attempts: 3
          command: npm ci

      - name: Install Dependencies
        run: npm ci
        timeout-minutes: 30

      - name: Set electron-builder architecture for macOS
        if: matrix.os == 'macos-latest'
        run: |
          echo "ELECTRON_BUILDER_ARCH=x64" >> $GITHUB_ENV

      - name: Build/release Electron app for non-macOS
        if: matrix.os != 'macos-latest'
        uses: Yan-Jobs/action-electron-builder@v1.7.0
        with:
          github_token: ${{ secrets.github_token }}
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}
        env:
          CSC_IDENTITY_AUTO_DISCOVERY: false

      - name: Build/release Electron app for macOS
        if: matrix.os == 'macos-latest'
        run: |
          npx electron-builder --mac --x64 --publish=${{ startsWith(github.ref, 'refs/tags/v') && 'always' || 'never' }}
          chmod +r node_modules/node-unar/lsar node_modules/node-unar/unar
        env:
          CSC_IDENTITY_AUTO_DISCOVERY: false
          GH_TOKEN: ${{ secrets.github_token }}